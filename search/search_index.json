{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"The Double Precision Maths Library","text":""},{"location":"#overview","title":"Overview","text":"<p>This is the documentation for the Double Precision Maths Library - a library of code for users of the Unity game engine. </p> <p>The library is designed to offer classes that are instantly familiar to Unity users, as each class in this library has a corresponding equivalent class in the core UnityEngine API. However, the crucial difference is that while the Unity classes are built using single precision floating-point numbers, this library provides those same classes with double precision floating point numbers.</p> <p>The classes provided by this library are:</p> <ul> <li>Mathd</li> <li>Matrix4x4d</li> <li>Quaterniond</li> <li>Vector2d</li> <li>Vector3d</li> <li>Vector4d</li> </ul>"},{"location":"#purpose-of-this-package","title":"Purpose Of This Package","text":"<p>Compared to the C# <code>float</code> type, the <code>double</code> type allows for calculations to be made with greater precision, and reduces the potential impact of floating-point rounding errors in long calculations. For example, when simulating the orbital mechanics of the solar system you might have a satellite that is hundreds of millions of metres away from the Sun, but you would still like to know its location down to the centimetre. Single precision floats will struggle in this scenario without workarounds, while double precision floats will happily cover the extreme range of values. </p> <p>This of course comes at the cost of some speed and doubled memory usage. </p>"},{"location":"#installation","title":"Installation","text":"<p>The package may installed from the Unity Asset Store for $5.</p>"},{"location":"#style-of-this-documentation","title":"Style Of This Documentation","text":"<p>The classes of this library are intended to match their Unity equivalents as closely as possible. Because of this, the documentation provided by Unity can largely serve as the documentation for this library.</p> <p>However, there are cases where the interfaces don't match. For example, there may be small differences in convention when returning values from some methods, or there are some methods which are simply not implemented by this library. This documentation seeks only to record those differences, no matter how big or small.</p> <p>In the documentation page for each class, you will find a link to the corresponding Unity documentation, as well as a complete description of all differences between the implementations.</p>"},{"location":"Mathd/","title":"Mathd","text":""},{"location":"Mathd/#unity-documentation","title":"Unity Documentation","text":"<p>The Unity documentation for the equivalent <code>Mathf</code> class may be found at:</p> <ul> <li>a</li> </ul>"}]}